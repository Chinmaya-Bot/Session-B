{"ast":null,"code":"var _jsxFileName = \"/Users/chinmaya.intern/Desktop/frontend/my-react-app/src/components/SourceIp.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SourceIp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ips: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:5000/srcip/10').then(response => {\n      console.log(response);\n      this.setState({\n        ips: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const {\n      ips\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"List of IPs\", ips.length ? ips.map(ips => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [ips.connections, \" \"]\n      }, ips.srcip, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 36\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SourceIp;","map":{"version":3,"names":["React","Component","axios","SourceIp","constructor","props","state","ips","componentDidMount","get","then","response","console","log","setState","data","catch","error","render","length","map","connections","srcip"],"sources":["/Users/chinmaya.intern/Desktop/frontend/my-react-app/src/components/SourceIp.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios'\n\n\nclass SourceIp extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            ips: []\n        }\n    }\n    componentDidMount(){\n        axios.get('http://127.0.0.1:5000/srcip/10')\n        .then((response)=>{\n            console.log(response)\n            this.setState({ips:response.data})\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    render() {\n        const { ips } = this.state\n        return (\n            <div>\n                List of IPs\n                {\n                    ips.length ?\n                    ips.map(ips => <div key={ips.srcip}>{ips.connections} </div>):\n                    null\n                }\n            </div>\n        )\n    }\n}\n\nexport default SourceIp"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;EAC5BG,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,GAAG,EAAE;IADI,CAAb;EAGH;;EACDC,iBAAiB,GAAE;IACfN,KAAK,CAACO,GAAN,CAAU,gCAAV,EACCC,IADD,CACOC,QAAD,IAAY;MACdC,OAAO,CAACC,GAAR,CAAYF,QAAZ;MACA,KAAKG,QAAL,CAAc;QAACP,GAAG,EAACI,QAAQ,CAACI;MAAd,CAAd;IACH,CAJD,EAKCC,KALD,CAKOC,KAAK,IAAI;MACZL,OAAO,CAACC,GAAR,CAAYI,KAAZ;IACH,CAPD;EAQH;;EACDC,MAAM,GAAG;IACL,MAAM;MAAEX;IAAF,IAAU,KAAKD,KAArB;IACA,oBACI;MAAA,0BAGQC,GAAG,CAACY,MAAJ,GACAZ,GAAG,CAACa,GAAJ,CAAQb,GAAG,iBAAI;QAAA,WAAsBA,GAAG,CAACc,WAA1B;MAAA,GAAUd,GAAG,CAACe,KAAd;QAAA;QAAA;QAAA;MAAA,QAAf,CADA,GAEA,IALR;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAUH;;AA7B2B;;AAgChC,eAAenB,QAAf"},"metadata":{},"sourceType":"module"}