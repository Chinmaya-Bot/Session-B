{"ast":null,"code":"var _jsxFileName = \"/Users/arpanabhishek/Desktop/Session-B/frontend/my-react-app/src/components/SourceIp.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SourceIp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ips: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:5000/srcip/10').then(response => {\n      this.setState({\n        ips: response.data\n      }); // console.log(this.state)\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    // const { ips } = this.state\n    // console.log(ips.srcip_details)\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"List of IPs\", this.state.ips.length ? // ips[0].connections:\n      this.state.ips.map((ip, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: ip.srcip_details.connections\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 54\n      }, this)) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SourceIp;","map":{"version":3,"names":["React","Component","axios","SourceIp","constructor","props","state","ips","componentDidMount","get","then","response","setState","data","catch","error","console","log","render","length","map","ip","index","srcip_details","connections"],"sources":["/Users/arpanabhishek/Desktop/Session-B/frontend/my-react-app/src/components/SourceIp.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios'\n\n\nclass SourceIp extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            ips: []\n        }\n    }\n    componentDidMount(){\n        axios.get('http://127.0.0.1:5000/srcip/10')\n        .then((response)=>{\n            \n            this.setState({ips:response.data})\n            // console.log(this.state)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    render() {\n        // const { ips } = this.state\n        // console.log(ips.srcip_details)\n        return (\n            <div>\n                List of IPs\n                \n                {\n                    this.state.ips.length ?\n                    // ips[0].connections:\n                    this.state.ips.map((ip,index) => <div key={index}>{ip.srcip_details.connections}\n                     </div>) :\n                    null\n                }\n            </div>\n        )\n    }\n}\n\nexport default SourceIp"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;EAC5BG,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,GAAG,EAAE;IADI,CAAb;EAGH;;EACDC,iBAAiB,GAAE;IACfN,KAAK,CAACO,GAAN,CAAU,gCAAV,EACCC,IADD,CACOC,QAAD,IAAY;MAEd,KAAKC,QAAL,CAAc;QAACL,GAAG,EAACI,QAAQ,CAACE;MAAd,CAAd,EAFc,CAGd;IACH,CALD,EAMCC,KAND,CAMOC,KAAK,IAAI;MACZC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IACH,CARD;EASH;;EACDG,MAAM,GAAG;IACL;IACA;IACA,oBACI;MAAA,0BAIQ,KAAKZ,KAAL,CAAWC,GAAX,CAAeY,MAAf,GACA;MACA,KAAKb,KAAL,CAAWC,GAAX,CAAea,GAAf,CAAmB,CAACC,EAAD,EAAIC,KAAJ,kBAAc;QAAA,UAAkBD,EAAE,CAACE,aAAH,CAAiBC;MAAnC,GAAUF,KAAV;QAAA;QAAA;QAAA;MAAA,QAAjC,CAFA,GAIA,IARR;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAaH;;AAlC2B;;AAqChC,eAAenB,QAAf"},"metadata":{},"sourceType":"module"}