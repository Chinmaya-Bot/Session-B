{"ast":null,"code":"var _jsxFileName = \"/Users/arpanabhishek/Desktop/Session-B/frontend/my-react-app/src/components/SourceIp.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SourceIp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ips: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://127.0.0.1:5000/srcip/10').then(response => {\n      console.log(response.data);\n      this.setState({\n        ips: response.data\n      }); // console.log(this.state)\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    // const { ips } = this.state\n    // console.log(ips.srcip_details)\n    console.log(this.state.ips);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"List of IPs\", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.ips[0].connections\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SourceIp;","map":{"version":3,"names":["React","Component","axios","SourceIp","constructor","props","state","ips","componentDidMount","get","then","response","console","log","data","setState","catch","error","render","connections"],"sources":["/Users/arpanabhishek/Desktop/Session-B/frontend/my-react-app/src/components/SourceIp.js"],"sourcesContent":["import React, {Component} from \"react\";\nimport axios from 'axios'\n\n\nclass SourceIp extends Component{\n    constructor(props){\n        super(props)\n        this.state = {\n            ips: []\n        }\n    }\n    componentDidMount(){\n        axios.get('http://127.0.0.1:5000/srcip/10')\n        .then((response)=>{\n            console.log(response.data)\n\n            this.setState({ips:response.data})\n            // console.log(this.state)\n        })\n        .catch(error => {\n            console.log(error)\n        })\n    }\n    render() {\n        // const { ips } = this.state\n        // console.log(ips.srcip_details)\n\n        console.log(this.state.ips)\n        return (\n            <div>\n                List of IPs\n                    {/* this.state.ips.length > 0 && */}\n                    <div>{this.state.ips[0].connections}</div>\n            </div>\n        )\n    }\n}\n\nexport default SourceIp\n"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,MAAMC,QAAN,SAAuBF,SAAvB,CAAgC;EAC5BG,WAAW,CAACC,KAAD,EAAO;IACd,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACTC,GAAG,EAAE;IADI,CAAb;EAGH;;EACDC,iBAAiB,GAAE;IACfN,KAAK,CAACO,GAAN,CAAU,gCAAV,EACCC,IADD,CACOC,QAAD,IAAY;MACdC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;MAEA,KAAKC,QAAL,CAAc;QAACR,GAAG,EAACI,QAAQ,CAACG;MAAd,CAAd,EAHc,CAId;IACH,CAND,EAOCE,KAPD,CAOOC,KAAK,IAAI;MACZL,OAAO,CAACC,GAAR,CAAYI,KAAZ;IACH,CATD;EAUH;;EACDC,MAAM,GAAG;IACL;IACA;IAEAN,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,GAAvB;IACA,oBACI;MAAA,uCAGQ;QAAA,UAAM,KAAKD,KAAL,CAAWC,GAAX,CAAe,CAAf,EAAkBY;MAAxB;QAAA;QAAA;QAAA;MAAA,QAHR;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAOH;;AA/B2B;;AAkChC,eAAehB,QAAf"},"metadata":{},"sourceType":"module"}